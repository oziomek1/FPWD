/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.foodlist;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Wojciech Ozimek 2017
 */
public class FoodList extends javax.swing.JFrame {
        
    
    /**
     * Creates new form FoodList
     */
    DefaultTableModel model;
    public FoodList() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        jTable1.setRowSelectionInterval(0, 0);
        lookForNewId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Food List");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "Apple", "Malus pumila"},
                { new Integer(2), "Lemon", "Citrus limon"},
                { new Integer(3), "Orange", "Citrus sinensis"},
                { new Integer(4), "Grapefruit", "Citrus paradisi"},
                { new Integer(5), "Banana", "Musa acuminata"}
            },
            new String [] {
                "Id", "Name", "Scientific Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setDoubleBuffered(true);
        jTable1.setFillsViewportHeight(true);
        jTable1.setMinimumSize(new java.awt.Dimension(340, 16));
        jTable1.setName(""); // NOI18N
        jTable1.setPreferredSize(new java.awt.Dimension(350, 16));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(40);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(1).setMinWidth(100);
            jTable1.getColumnModel().getColumn(2).setMinWidth(300);
        }

        jButton1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    AddOrEdit newWindow;
    boolean  isVisible = false;
    /*
    *   Update items in table
    */
    public void lookForNewId() {
        existingId = new Vector<>();
        for(int j = 0; j < jTable1.getRowCount(); j++) {
            existingId.add((Integer)jTable1.getModel().getValueAt(j, 0));
            
        }
    }
    /*
    *   Show or hide window for adding/editing items
    */
    public void setVisibility(boolean b) {
        isVisible = b;
    } 
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*
        *   Adding new item to list    
        */    
        lookForNewId();
        if(isVisible == false) {
            newWindow = new AddOrEdit(0);
            newWindow.setVisible(true);
            isVisible = true;
            
            newWindow.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                if(updateTable) {
                    model = (DefaultTableModel) jTable1.getModel();
                    model.addRow(new Object[] {iD, nAME, nAME_SCIENTIFIC});
                }
                isVisible = false;
            }
            public void windowClosed(WindowEvent e) {
                if(updateTable) {                
                    model = (DefaultTableModel) jTable1.getModel();
                    model.addRow(new Object[] {iD, nAME, nAME_SCIENTIFIC});
                }
                isVisible = false;
            }
        });
        }
        model.fireTableDataChanged();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        /*
        *   Editing item in list    
        */
        lookForNewId();
        if(isVisible == false) {
            
            int index = jTable1.getSelectedRow();
            if(index != -1) {
                iD = (Integer) jTable1.getModel().getValueAt(index, 0);
                nAME = jTable1.getModel().getValueAt(index, 1).toString();
                nAME_SCIENTIFIC = jTable1.getModel().getValueAt(index, 2).toString();

                newWindow = new AddOrEdit(1);
                newWindow.setVisible(true);
                isVisible = true;

                newWindow.addWindowListener(new WindowAdapter() {
                    public void windowClosing(WindowEvent e) {
                        if(updateTable) {
                            int modelIndex = jTable1.convertRowIndexToModel(index);
                            model = (DefaultTableModel) jTable1.getModel();
                            model.removeRow(modelIndex);
                            model = (DefaultTableModel) jTable1.getModel();
                            model.addRow(new Object[] {iD, nAME, nAME_SCIENTIFIC});
                        }
                        isVisible = false;
                    }
                    public void windowClosed(WindowEvent e) {
                        if(updateTable) {
                            int modelIndex = jTable1.convertRowIndexToModel(index);
                            model = (DefaultTableModel) jTable1.getModel();
                            model.removeRow(modelIndex);
                            model = (DefaultTableModel) jTable1.getModel();
                            model.addRow(new Object[] {iD, nAME, nAME_SCIENTIFIC});
                        }
                        isVisible = false;
                    }
                });
            }
        }
        model.fireTableDataChanged();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        /*
        *   Delete item from table
        */
        int index = jTable1.getSelectedRow();
        if(index != -1) {
            int modelIndex = jTable1.convertRowIndexToModel(index);
            model = (DefaultTableModel) jTable1.getModel();
            model.removeRow(modelIndex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    
        public static Integer iD = null;
        public static String nAME = null;
        public static String nAME_SCIENTIFIC = null;
        public static Vector<Integer> existingId;
        public static boolean updateTable = false;

        public static HashMap<Integer, String> tMap = new HashMap<>();
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FoodList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FoodList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FoodList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FoodList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FoodList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
